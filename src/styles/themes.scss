@use 'sass:map';
@use '~@angular/material' as mat;

@include mat.core();



@mixin set-colors-classes($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette:  map.get($color-config, 'accent');
  $warn-palette:    map.get($color-config, 'warn');
  $is-dark-theme:   map.get($color-config, 'is-dark');

  .component-primary-background {
    background: mat.get-color-from-palette($primary-palette, 900);
  }

  .component-accent-background {
    background-color: mat.get-color-from-palette($accent-palette, A400);
  }
}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);

  .my-carousel {
    font-family: mat.font-family($typography-config);
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include set-colors-classes($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}

// Define a theme.
$primary: mat.define-palette(mat.$purple-palette, 700, 500, 800);
$accent:  mat.define-palette(mat.$green-palette, A200, A100, A400);

$theme: mat.define-dark-theme((
  color: (
    primary: $primary,
    accent: $accent,
  )
));

// Include all theme styles for the components.
@include mat.all-component-themes($theme);
@include set-colors-classes($theme);

